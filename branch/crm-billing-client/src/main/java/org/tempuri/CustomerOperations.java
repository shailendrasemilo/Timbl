package org.tempuri;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import com.np.tele.crm.constants.IAppConstants;

/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
//103.14.124.21
@WebServiceClient(name = "CustomerOperations", targetNamespace = "http://tempuri.org/")
public class CustomerOperations
    extends Service
{
    private final static URL    CUSTOMEROPERATIONS_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger( org.tempuri.CustomerOperations.class.getName() );
    static
    {
        URL url = null;
        try
        {
            URL baseUrl;
            baseUrl = org.tempuri.CustomerOperations.class.getResource( "." );
            url = new URL( baseUrl, IAppConstants.CRM_BILLING_WSDL );
        }
        catch ( MalformedURLException e )
        {
            logger.warning( "Failed to create URL for the wsdl Location: " + IAppConstants.CRM_BILLING_WSDL
                    + ", retrying as a local file" );
            logger.warning( e.getMessage() );
        }
        CUSTOMEROPERATIONS_WSDL_LOCATION = url;
    }

    public CustomerOperations( URL wsdlLocation, QName serviceName )
    {
        super( wsdlLocation, serviceName );
    }

    public CustomerOperations()
    {
        super( CUSTOMEROPERATIONS_WSDL_LOCATION, new QName( "http://tempuri.org/", "CustomerOperations" ) );
    }

    /**
     * 
     * @return
     *     returns ICustomer
     */
    @WebEndpoint(name = "BasicHttpBinding_ICustomer")
    public ICustomer getBasicHttpBindingICustomer()
    {
        //        return super.getPort( new QName( "http://tempuri.org/", "BasicHttpBinding_ICustomer" ), ICustomer.class );
        return setEndPoint( super.getPort( new QName( "http://tempuri.org/", "BasicHttpBinding_ICustomer" ),
                                           ICustomer.class ), IAppConstants.CRM_BILLING_END_POINT );
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ICustomer
     */
    @WebEndpoint(name = "BasicHttpBinding_ICustomer")
    public ICustomer getBasicHttpBindingICustomer( WebServiceFeature... features )
    {
        return super.getPort( new QName( "http://tempuri.org/", "BasicHttpBinding_ICustomer" ), ICustomer.class,
                              features );
    }

    public static <E> E setEndPoint( E inService, String endPoint )
    {
        BindingProvider bp = (BindingProvider) inService;
        bp.getRequestContext().put( BindingProvider.ENDPOINT_ADDRESS_PROPERTY, endPoint );
        return inService;
    }
}
